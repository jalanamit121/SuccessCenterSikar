package com.winbee.sekhawatidefence.WebApi;

import com.winbee.sekhawatidefence.NewModels.CourseContent;
import com.winbee.sekhawatidefence.model.AskDoubtQuestion;
import com.winbee.sekhawatidefence.model.BannerModel;
import com.winbee.sekhawatidefence.model.BranchName;
import com.winbee.sekhawatidefence.model.FacultyName;
import com.winbee.sekhawatidefence.model.ForgetMobile;
import com.winbee.sekhawatidefence.model.InstructionsModel;
import com.winbee.sekhawatidefence.model.LiveClass;
import com.winbee.sekhawatidefence.model.LiveStatus;
import com.winbee.sekhawatidefence.model.McqAskedQuestionModel;
import com.winbee.sekhawatidefence.model.McqQuestionModel;
import com.winbee.sekhawatidefence.model.McqQuestionSolutionModel;
import com.winbee.sekhawatidefence.model.McqSolutionModel;
import com.winbee.sekhawatidefence.model.NewDoubtQuestion;
import com.winbee.sekhawatidefence.model.NotesModel;
import com.winbee.sekhawatidefence.model.OtpVerify;
import com.winbee.sekhawatidefence.model.RefCode;
import com.winbee.sekhawatidefence.model.RefUser;
import com.winbee.sekhawatidefence.model.ResendOtp;
import com.winbee.sekhawatidefence.model.ResetPassword;
import com.winbee.sekhawatidefence.model.ResultModel;
import com.winbee.sekhawatidefence.model.SIACDetailsMainModel;
import com.winbee.sekhawatidefence.model.SIADMainModel;
import com.winbee.sekhawatidefence.model.SIADSolutionMainModel;
import com.winbee.sekhawatidefence.model.SectionDetailsMainModel;
import com.winbee.sekhawatidefence.model.SolutionDoubtQuestion;
import com.winbee.sekhawatidefence.model.SolutionQuestion;
import com.winbee.sekhawatidefence.model.StartTestModel;
import com.winbee.sekhawatidefence.model.UpdateModel;
import com.winbee.sekhawatidefence.model.ViewResult;

import org.json.JSONArray;

import java.util.ArrayList;

import retrofit2.Call;
import retrofit2.http.Field;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.POST;
import retrofit2.http.Query;

public interface ClientApi {

    @POST("fetch-cover-banner.php")
    Call<BannerModel> getBanner(
            @Query("org_id") String org_id
    );

    @POST("fetch_bucket_cover_information.php")
    Call<CourseContent> getBranchId(
            @Query("SubURL") int SubURL,
            @Query("ORG_ID") String ORG_ID,
            @Query("PARENT_ID") String PARENT_ID,
            @Query("USER_ID") String USER_ID,
            @Query("DEVICE_ID") String DEVICE_ID
    );
    @POST("fetch_user_cover_information.php")
    Call<RefCode> refCodeSignIn(
            @Query("SubURL") int SubURL,
            @Query("username") String username,
            @Query("password") String password,
            @Query("refcode") String refcode
    );

    @POST("user_registration_information.php")
    Call<RefUser> refUserSignIn(
            @Query("SubURL") int SubURL,
            @Query("name") String name,
            @Query("email") String email,
            @Query("mobile") String mobile,
            @Query("refcode") String refcode,
            @Query("password") String password);

    @POST("send-otp.php")
    Call<ForgetMobile> getForgetMobile(
            @Query("SubURL") int SubURL,
            @Query("username") String username
    );


    @POST("reset-password.php")
    Call<ResetPassword> getResetPassword(
            @Query("SubURL") int SubURL,
            @Query("username") String username,
            @Query("otp") String otp,
            @Query("new_password") String new_password
    );
    @POST("verify-otp.php")
    Call<OtpVerify> getOtpVerify(
            @Query("SubURL") int SubURL,
            @Query("username") String username,
            @Query("otp") String otp
    );


    @POST("fetch-all-live-classes.php")
    Call<ArrayList<LiveClass>> getLive(
            @Query("filter_type") long filter_type,
            @Query("filter_value") String filter_value
    );

    @POST("fetch-notes-of-live-class.php")
    Call<ArrayList<NotesModel>> getNotes(
            @Query("live_class_id") String live_class_id
    );

    @POST("fetch-daily-update.php")
    Call<ArrayList<UpdateModel>> getDailyupdate();



    @FormUrlEncoded
    @POST("ask-doubt.php")
    Call<NewDoubtQuestion> getNewQuestion(
            @Field("title") String title,
            @Field("question") String question,
            @Field("userid") String userid
    );


    @POST("beta-doubt-storage.php")
    Call<ArrayList<AskDoubtQuestion>> getQuestion();

    @FormUrlEncoded
    @POST("ask-doubt.php")
    Call<SolutionDoubtQuestion> getNewSolution(
            @Field("userid") String userid,
            @Field("filename") String filename,
            @Field("answer") String answer
    );

    @POST("doubt-storage.php")
    Call<ArrayList<SolutionQuestion>> 